프론트엔드 기반 기술
HTML, CSS, JavaScript

***수업 주요파트***
1. 선택자
2. 박스모델
3. 포지션


* 이론 기반은 알아만 두기

● WEB
: 인터넷에 접속해서 홈페이지를 사용

● APP
: 홈페이지를 다운 받아서 사용

● Back-end 
: db(데이터베이스), SQL, 보안 관련 파트
→ Java(사용프로그램 : jsp),(php)

●Front-end 
: 슬라이드, 디자인 등 눈에 보이는 파트
-폼 형식으로 전송해서 프론트, 백엔드 연결

- UI(User Interface) / UX(User Experience, 사용자 경험)
▶ UX가 더 포괄적인 개념
▷ UX 예시 : 메뉴바가 상단에 있다는 것을 경험으로 아는 것

1) HTML : 홈페이지의 내용(글, 그림)과 구조
2) CSS : 레이아웃, 스타일 → 내용의 디자인(색, 크기나 모양 등), 박스 배열
3) JavaScript : 동적인 동작(움직임/ 반응)(ex. click, scroll)

<수업내용>
1. 브라우저
→  chrome
2. 웹 표준
3. VS code (에디터) : 비주얼 스튜디오 코드

● html : 브라우저 실행시키라는 명령
▶ <> : 태그(tag), html을 이루는 요소
-태그는 기본적으로 열었으면 닫혀야함(닫히는 태그에는 앞에 /포함)(안닫히는 것도 o)

● CSS : 
-<h1 style="color:red">장예림</h1> 에서 "color:red" 부분
-쓰는 법 : header {color:red;} → 선택자 {속성(property):속성값(value);}

●개발자도구(<F12>)
- error 메세지 확인 가능

★ 틀린 부분 개발자도구 통해 확인, 검색해서 알아보는 것 중요
-사이트 추천 : MDN

● 선택자 (selector) : 명령을 적용할 것을 선택할 때 사용
(1) 태그선택자 {} (ex. header {})
(2) * : 모든 태그
(2) 부모태그>자식태그선택자 {} : 부모태그 안의 자식태그만 선택자로 선택
(4) .클래스이름.클래스이름 : 클래스가 붙어 있을 때
-ex. class = mopen oo

● inline-style : 선택자 정함 없이 선택하지 않고 명령
● 외부 스타일 시트 : 스타일 명령을 밖으로 빼내서 따로 기록

addEventListener : 이벤트 추가
function : 함수
console.log('') : 콘솔에 넣어라
; : 뒤에 추가할 때 사용
querySelector : 선택자 하나만을 선택
querySelectorAll : 같은 이름의 선택자가 여러 개 있을 때 여러 개를 한 번에 선택

● 반응형 홈페이지
: 화면 사이즈에 맞춰서 홈페이지 변화

● html 파일 기본 구조
<!DOCTYPE html>
: html 버전 선언 → html = html5
<html lang="en">
: html 언어가 영어
<html>
: html 언어로 진행
<head>
: 기저, 설정을 담당
<body>
: html에서 써지는 부분
UTF-8 : 유니코드, 글자 통용
<meta http-equiv="X-UA-Compatible" content="IE=edge">
: 홈페이지 확장자
meta name="viewport"
:핸드폰으로 들어갔을 때 핸드폰 사이즈에 맞춰주는 것
content="width=device-width, initial-scale=1.0"
: 디바이스가 정해준 사이즈 대로 내용이 나오도록, scale이 원래의 사이즈의 1배만큼
<title>
: 파일의 제목
<h1>~<h6>
*h1은 하나만 있어야함
: 제목, 유일하게 넘버링이 붙는 태그
<nav>
: 목차
index.html
: 대표 페이지
<p>
: 문장 (paragraph)
<table>
: 표
<ol>/ <ul>
: 번호가 있는/없는 목록
<div>
: 박스의 기본 값(무언갈 감싸야 할 때)
<br>
: 글자의 줄을 바꿔주는 태그
class
: 박스에 이름을 부여, 부를 때 .class이름으로 불러야함




부모 태그(parent element), 자식 태그 : 태그 안에 들어간 것을 자식 태그, 태그를 포함하는 것을 부모 태그
-ex. <body> 는 <html>의 자식 태그
- 같은 선상의 태그(ex. h1,h2)는 이전(prev), 다음(next)태그라고 부름

*visual studio에서 <body> 클릭 alt + l + o 누르면 화면 바로 연결
*!+tab 하면 기본 html구조 나옴
*에디터 안에 live server(서버 실시간 변경 가능), emmet, auto rename tag 설치 확인
*alt + shift + 방향키 아래 : 복사붙여넣기
*<ctrl> + / : 주석 (html, css, javascript별로 주석 모양에 차이)
*setting에서 Editor: Format On Save → 저장 시에 자동 줄맞춤
*lorem숫자 enter누르면 의미없는 숫자만큼의 단어를 만들어줌
* <alt> 마우스로 누르면 다중선택 가능

*홈페이지 제작 목적 → client의 의도에 맞게 정보 전달

●DOM(Document Object Model)
: html로 만들어진 모델

●위치를 정해놓은 태그
→ <header>, <main>, <footer>

●박스모델
: 내용이 직접적으로 들어가는 것 제외 거의 대부분은 박스를 가짐, 짝이 없는 태그는 박스가 아님
<header>01<header> → 하나의 박스
-박스 아닌 것 : span, br
→ 박스 위에 박스, 박스 배열 등을 할 수 있음
- 기본 속성 : 태그들이 늘어나고, 투명, 겹쳐 쓸 수 있음, 옆에 아무것도 오게 할 수 없음,바깥쪽 안쪽 여백이 없음
(친하지 않아서 사이즈를 맞춰도 옆에 올라오지 않음)
-width는 부모 태그로부터 받은 태그의 크기가 100%가 되고, 이 때 width는 종속된 값이 자동으로 설정되므로 width: auto가 됨

픽셀 : 모니터 기준으로 생각하면 쉬움

margin : 테두리 바깥쪽 여백
padding : 테두리의 안쪽 여백
border : 테두리

-<h1>은 margin 존재

1) 박스 사이즈를 내가 원하는 대로 조절하고 싶을 때 
→ * {box-sizing: border-box;}
*웹에서는 꼭 필요한 경우를 제외하고 높이값은 건드리지 않음(백그라운드 등 경우 제외)

2) 박스를 옆(가로,x축)으로 정렬하고 싶을 때 (세로, y축은 자동으로 됨)
① 박스를 가운데로 하고 싶을 때 : margin(축약형으로 기입시 상우하좌/상하,좌우순으로 기입): 0(아래 위) auto(좌우 너비)
-좌우 너비가 auto로 설정되므로 반씩 가운데로 감
② 박스 안 텍스트가 가운데에 오도록 : text의 기본값은 좌측 상단 
-text-align:center
③3박스를 가로로 배치(가로로 배치하는 부모에 flex값 주면 됨, flex값 주면 크기 줄어들어서 붙게 됨)
- display: flex;
④ 붙은 3박스를 3등분
-div { width : 33.333333%} (보통 6자리에서 끝냄)
⑤ 4박스로 늘렸을 때 width가 안먹으면
-flex: 1; → margin: auto처럼 자기 자리 차지하므로 4등분 됨

'⑥ 박스 겹쳐두기(z축에 순서대로 겹치기) → position: absolute;
-position은 반응형 홈페이지 만들 때도 유용하게 사용됨, 좌표를 가짐
-position을 가지면 박스의 속성을 가지게 되어서 width, height 등 적용 가능
-좌표를 찍고 기준을 두지 않으면 좌표는 <body>를 기준으로 찍힘, 좌표 안찍으면 그 위치에 그대로 떠있음

*박스가 아닌 것들은 박스의 성격을 가지지 않으므로 width, height 가 적용되지 않음, 아래위 margin, padding만 적용되지 않음
(글자 사이 띄어쓰기 위해 좌우는 적용) but background가 있으면 아래위가 적용된 것처럼 보임
-span, strong, em?

*0제외 모든 숫자 단위 필수!

⑦ 마우스를 박스 위에 올렸을 때(mouseover) 모양 변경 및 이동(css로 가능한 움직임)
hover
overflow:hidden : 넘치는 부분은 보이지 않게 자름

*transform : 레이아웃을 손상시키지 않고 자기자신을 변화,css

보는 화면(뷰포트)을 기준으로 위치 설정 position: fixed 속성 사용
부모 태그에 position 설정 돼있으면 자식도 그 기준으로 position이 설정됨
z index : z축에 겹쳐져있는 순서

같은 부모에 있는 자식들끼리는 순서(index)가 존재 → css에서는 1번부터 시작, 프로그램에서는 0부터 셈

번호 불러오기 nth-child

*transition 사용 시 display:none, block은 애니메이션이 안 됨 

js에서 this = 자기자신을 뜻함


<선행학습>
github 공부 + 계정 만들어서 올려두기